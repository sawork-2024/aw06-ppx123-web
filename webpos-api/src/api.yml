openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /carts:
    get:
      summary: List all carts
      operationId: listCarts
      tags:
        - carts
      responses:
        '200':
          description: A paged array of carts
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Carts"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
        summary: Create an empty cart
        operationId: createCart
        tags:
            - carts
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        responses:
          '200':
            description: Expected response to a valid request
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Cart"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
  /carts/{cartId}:
    get:
      summary: Info for a specific cart
      operationId: getCartById
      tags:
        - cart
      parameters:
        - name: cartId
          in: path
          required: true
          description: The id of the cart to retrieve
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
        summary: Add a item to the cart
        operationId: addItemToCart
        tags:
            - cart
        parameters:
            - name: cartId
              in: path
              required: true
              description: The id of the cart to retrieve
              schema:
                type: integer
                format: int32
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
        responses:
          '200':
            description: Expected response to a valid request
            content:
              application/json:
                schema:
                    $ref: "#/components/schemas/Cart"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                    $ref: "#/components/schemas/Error"
  /product:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /product/{productId}:
    get:
      summary: Info for a specific product
      operationId: getProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Patch all products
      operationId: patchProducts
      tags:
        - products
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  format: int32
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /counter/checkout:
    post:
      summary: Checkout
      operationId: checkout
      tags:
        - counter
      requestBody:
        description: cart
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        '200':
          description: total of the cart
          content:
            application/json:
              schema:
                type: number
                format: double
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Carts:
      type: array
      items:
          $ref: "#/components/schemas/Cart"
    CartItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        product:
          $ref: "#/components/schemas/Product"
    Cart:
      type: object
      properties:
        id:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        img:
          type: string
        category:
          type: string
        quantity:
          type: integer
        stock:
          type: integer
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string